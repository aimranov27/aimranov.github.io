{"ast":null,"code":"var _jsxFileName = \"/Users/aydinimranov/Desktop/challenge/wordle-az/azwordle/src/components/keyboard/Keyboard.tsx\",\n    _s = $RefreshSig$();\n\nimport { getStatuses } from '../../lib/statuses';\nimport { Key } from './Key';\nimport { useEffect } from 'react';\nimport { FiDelete } from 'react-icons/fi';\nimport { AiOutlineEnter } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Keyboard = _ref => {\n  _s();\n\n  let {\n    onChar,\n    onDelete,\n    onEnter,\n    guesses,\n    isRevealing\n  } = _ref;\n  const charStatuses = getStatuses(guesses);\n\n  const onClick = value => {\n    if (value === 'ENTER') {\n      onEnter();\n    } else if (value === 'DELETE') {\n      onDelete();\n    } else {\n      onChar(value);\n    }\n  };\n\n  useEffect(() => {\n    const listener = e => {\n      if (e.code === 'Enter') {\n        onEnter();\n      } else if (e.code === 'Backspace') {\n        onDelete();\n      } else {\n        const key = e.key.toUpperCase();\n\n        if (key.length === 1 && key >= 'A' && key <= 'Z') {\n          onChar(key);\n        }\n      }\n    };\n\n    window.addEventListener('keyup', listener);\n    return () => {\n      window.removeEventListener('keyup', listener);\n    };\n  }, [onEnter, onDelete, onChar]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-1\",\n      children: ['Q', 'Ü', 'E', 'R', 'T', 'Y', 'U', 'İ', 'O', 'P', 'Ö', 'Ğ'].map(key => /*#__PURE__*/_jsxDEV(Key, {\n        value: key,\n        onClick: onClick,\n        status: charStatuses[key],\n        isRevealing: isRevealing\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-1\",\n      children: ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'I', 'Ə'].map(key => /*#__PURE__*/_jsxDEV(Key, {\n        value: key,\n        onClick: onClick,\n        status: charStatuses[key],\n        isRevealing: isRevealing\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(Key, {\n        width: 65.4,\n        value: \"ENTER\",\n        onClick: onClick,\n        children: /*#__PURE__*/_jsxDEV(AiOutlineEnter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), ['Z', 'X', 'C', 'V', 'B', 'N', 'M', 'Ç', 'Ş'].map(key => /*#__PURE__*/_jsxDEV(Key, {\n        value: key,\n        onClick: onClick,\n        status: charStatuses[key],\n        isRevealing: isRevealing\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Key, {\n        width: 65.4,\n        value: \"DELETE\",\n        onClick: onClick,\n        children: /*#__PURE__*/_jsxDEV(FiDelete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Keyboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Keyboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"sources":["/Users/aydinimranov/Desktop/challenge/wordle-az/azwordle/src/components/keyboard/Keyboard.tsx"],"names":["getStatuses","Key","useEffect","FiDelete","AiOutlineEnter","Keyboard","onChar","onDelete","onEnter","guesses","isRevealing","charStatuses","onClick","value","listener","e","code","key","toUpperCase","length","window","addEventListener","removeEventListener","map"],"mappings":"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","sourcesContent":["import { getStatuses } from '../../lib/statuses'\nimport { Key } from './Key'\nimport { useEffect } from 'react'\nimport { ENTER_TEXT, DELETE_TEXT } from '../../constants/strings'\nimport { FiDelete } from 'react-icons/fi'\nimport { AiOutlineEnter } from 'react-icons/ai'\n\ntype Props = {\n  onChar: (value: string) => void\n  onDelete: () => void\n  onEnter: () => void\n  guesses: string[]\n  isRevealing?: boolean\n}\n\nexport const Keyboard = ({\n  onChar,\n  onDelete,\n  onEnter,\n  guesses,\n  isRevealing,\n}: Props) => {\n  const charStatuses = getStatuses(guesses)\n\n  const onClick = (value: string) => {\n    if (value === 'ENTER') {\n      onEnter()\n    } else if (value === 'DELETE') {\n      onDelete()\n    } else {\n      onChar(value)\n    }\n  }\n\n  useEffect(() => {\n    const listener = (e: KeyboardEvent) => {\n      if (e.code === 'Enter') {\n        onEnter()\n      } else if (e.code === 'Backspace') {\n        onDelete()\n      } else {\n        const key = e.key.toUpperCase()\n        if (key.length === 1 && key >= 'A' && key <= 'Z') {\n          onChar(key)\n        }\n      }\n    }\n    window.addEventListener('keyup', listener)\n    return () => {\n      window.removeEventListener('keyup', listener)\n    }\n  }, [onEnter, onDelete, onChar])\n\n  return (\n    <div>\n      <div className=\"flex justify-center mb-1\">\n        {['Q', 'Ü', 'E', 'R', 'T', 'Y', 'U', 'İ', 'O', 'P', 'Ö', 'Ğ'].map(\n          (key) => (\n            <Key\n              value={key}\n              key={key}\n              onClick={onClick}\n              status={charStatuses[key]}\n              isRevealing={isRevealing}\n            />\n          )\n        )}\n      </div>\n      <div className=\"flex justify-center mb-1\">\n        {['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'I', 'Ə'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n      </div>\n      <div className=\"flex justify-center\">\n        <Key width={65.4} value=\"ENTER\" onClick={onClick}>\n          <AiOutlineEnter />\n        </Key>\n        {['Z', 'X', 'C', 'V', 'B', 'N', 'M', 'Ç', 'Ş'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n        <Key width={65.4} value=\"DELETE\" onClick={onClick}>\n          <FiDelete />\n        </Key>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}