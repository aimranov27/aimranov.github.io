{"ast":null,"code":"import { getGuessStatuses } from './statuses';\nimport { solutionIndex } from './words';\nimport { GAME_TITLE } from '../constants/strings';\nimport { getStoredIsHighContrastMode } from './localStorage';\nimport { MAX_CHALLENGES } from '../constants/settings';\nexport const shareStatus = (guesses, lost, isHardMode) => {\n  navigator.clipboard.writeText(`${GAME_TITLE} ${solutionIndex} ${lost ? 'X' : guesses.length}/${MAX_CHALLENGES}${isHardMode ? '*' : ''}\\n\\n` + generateEmojiGrid(guesses));\n};\nexport const generateEmojiGrid = guesses => {\n  return guesses.map(guess => {\n    const status = getGuessStatuses(guess);\n    const isHighContrast = getStoredIsHighContrastMode();\n    return guess.split('').map((_, i) => {\n      switch (status[i]) {\n        case 'correct':\n          if (isHighContrast) {\n            return 'ðŸŸ§';\n          }\n\n          return 'ðŸŸ©';\n\n        case 'present':\n          if (isHighContrast) {\n            return 'ðŸŸ¦';\n          }\n\n          return 'ðŸŸ¨';\n\n        default:\n          if (localStorage.getItem('theme') === 'dark') {\n            return 'â¬›';\n          }\n\n          return 'â¬œ';\n      }\n    }).join('');\n  }).join('\\n');\n};","map":{"version":3,"sources":["/Users/aydinimranov/Desktop/challenge/wordle-az/azwordle/src/lib/share.ts"],"names":["getGuessStatuses","solutionIndex","GAME_TITLE","getStoredIsHighContrastMode","MAX_CHALLENGES","shareStatus","guesses","lost","isHardMode","navigator","clipboard","writeText","length","generateEmojiGrid","map","guess","status","isHighContrast","split","_","i","localStorage","getItem","join"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,YAAjC;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,2BAAT,QAA4C,gBAA5C;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,OAAO,MAAMC,WAAW,GAAG,CACzBC,OADyB,EAEzBC,IAFyB,EAGzBC,UAHyB,KAItB;AACHC,EAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CACG,GAAET,UAAW,IAAGD,aAAc,IAC7BM,IAAI,GAAG,GAAH,GAASD,OAAO,CAACM,MACtB,IAAGR,cAAe,GAAEI,UAAU,GAAG,GAAH,GAAS,EAAG,MAF3C,GAGEK,iBAAiB,CAACP,OAAD,CAJrB;AAMD,CAXM;AAaP,OAAO,MAAMO,iBAAiB,GAAIP,OAAD,IAAuB;AACtD,SAAOA,OAAO,CACXQ,GADI,CACCC,KAAD,IAAW;AACd,UAAMC,MAAM,GAAGhB,gBAAgB,CAACe,KAAD,CAA/B;AACA,UAAME,cAAc,GAAGd,2BAA2B,EAAlD;AACA,WAAOY,KAAK,CACTG,KADI,CACE,EADF,EAEJJ,GAFI,CAEA,CAACK,CAAD,EAAIC,CAAJ,KAAU;AACb,cAAQJ,MAAM,CAACI,CAAD,CAAd;AACE,aAAK,SAAL;AACE,cAAIH,cAAJ,EAAoB;AAClB,mBAAO,IAAP;AACD;;AACD,iBAAO,IAAP;;AACF,aAAK,SAAL;AACE,cAAIA,cAAJ,EAAoB;AAClB,mBAAO,IAAP;AACD;;AACD,iBAAO,IAAP;;AACF;AACE,cAAII,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,MAAtC,EAA8C;AAC5C,mBAAO,GAAP;AACD;;AACD,iBAAO,GAAP;AAfJ;AAiBD,KApBI,EAqBJC,IArBI,CAqBC,EArBD,CAAP;AAsBD,GA1BI,EA2BJA,IA3BI,CA2BC,IA3BD,CAAP;AA4BD,CA7BM","sourcesContent":["import { getGuessStatuses } from './statuses'\nimport { solutionIndex } from './words'\nimport { GAME_TITLE } from '../constants/strings'\nimport { getStoredIsHighContrastMode } from './localStorage'\nimport { MAX_CHALLENGES } from '../constants/settings'\n\nexport const shareStatus = (\n  guesses: string[],\n  lost: boolean,\n  isHardMode: boolean\n) => {\n  navigator.clipboard.writeText(\n    `${GAME_TITLE} ${solutionIndex} ${\n      lost ? 'X' : guesses.length\n    }/${MAX_CHALLENGES}${isHardMode ? '*' : ''}\\n\\n` +\n      generateEmojiGrid(guesses)\n  )\n}\n\nexport const generateEmojiGrid = (guesses: string[]) => {\n  return guesses\n    .map((guess) => {\n      const status = getGuessStatuses(guess)\n      const isHighContrast = getStoredIsHighContrastMode()\n      return guess\n        .split('')\n        .map((_, i) => {\n          switch (status[i]) {\n            case 'correct':\n              if (isHighContrast) {\n                return 'ðŸŸ§'\n              }\n              return 'ðŸŸ©'\n            case 'present':\n              if (isHighContrast) {\n                return 'ðŸŸ¦'\n              }\n              return 'ðŸŸ¨'\n            default:\n              if (localStorage.getItem('theme') === 'dark') {\n                return 'â¬›'\n              }\n              return 'â¬œ'\n          }\n        })\n        .join('')\n    })\n    .join('\\n')\n}\n"]},"metadata":{},"sourceType":"module"}